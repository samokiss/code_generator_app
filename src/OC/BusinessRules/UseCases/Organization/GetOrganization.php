<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OC\BusinessRules\UseCases\Organization;

use OC\BusinessRules\Entities\Organization\Organization;
use OC\BusinessRules\Gateways\Organization\OrganizationGateway;
use OC\BusinessRules\Requestors\Organization\GetOrganizationRequest;
use OC\BusinessRules\Responders\Organization\OrganizationDetailResponse;
use OC\BusinessRules\Responders\Organization\OrganizationDetailResponseAssembler;
use OpenClassrooms\UseCase\Application\Annotations\Security;
use OpenClassrooms\UseCase\BusinessRules\Requestors\UseCase;
use OpenClassrooms\UseCase\BusinessRules\Requestors\UseCaseRequest;

class GetOrganization implements UseCase
{
    /**
     * @var OrganizationGateway
     */
    private $organizationGateway;

    /**
     * @var OrganizationDetailResponseAssembler
     */
    private $responseAssembler;

    public function __construct(OrganizationDetailResponseAssembler $assembler, OrganizationGateway $organizationGateway)
    {
        $this->organizationGateway = $organizationGateway;
        $this->responseAssembler = $assembler;
    }

    /**
     * @Security(roles="")
     *
     * @param GetOrganizationRequest $useCaseRequest
     *
     * @throws \OC\BusinessRules\Gateways\Organization\Exceptions\OrganizationNotFoundException
     */
    public function execute(UseCaseRequest $useCaseRequest): OrganizationDetailResponse
    {
        $organization = $this->getOrganization($useCaseRequest->getOrganizationId());

        return $this->buildResponse($organization);
    }

    /**
     * @throws \OC\BusinessRules\Gateways\Organization\Exceptions\OrganizationNotFoundException
     */
    private function getOrganization(int $organizationId): Organization
    {
        return $this->organizationGateway->findById($organizationId);
    }

    private function buildResponse(Organization $organization): OrganizationDetailResponse
    {
        return $this->responseAssembler->create($organization);
    }
}
