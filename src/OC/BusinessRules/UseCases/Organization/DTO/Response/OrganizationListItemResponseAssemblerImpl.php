<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OC\BusinessRules\UseCases\Organization\DTO\Response;

use OC\BusinessRules\Entities\Organization\Organization;
use OC\BusinessRules\Responders\Organization\OrganizationListItemResponse;
use OC\BusinessRules\Responders\Organization\OrganizationListItemResponseAssembler;
use OC\BusinessRules\Responders\PaginatedUseCaseResponse;
use OC\BusinessRules\Responders\PaginatedUseCaseResponseBuilder;
use OpenClassrooms\UseCase\BusinessRules\Entities\PaginatedCollection;

class OrganizationListItemResponseAssemblerImpl implements OrganizationListItemResponseAssembler
{
    use OrganizationResponseAssemblerTrait;

    /**
     * @var PaginatedUseCaseResponseBuilder
     */
    private $paginatedUseCaseResponseBuilder;

    public function __construct(PaginatedUseCaseResponseBuilder $builder)
    {
        $this->paginatedUseCaseResponseBuilder = $builder;
    }

    /**
     * {@inheritdoc}
     */
    public function create(Organization $entity): OrganizationListItemResponse
    {
        $response = new OrganizationListItemResponseDTO();
        $this->hydrateCommonFields($entity, $response);

        return $response;
    }

    /**
     * {@inheritdoc}
     */
    public function createPaginatedCollection(PaginatedCollection $collection): PaginatedUseCaseResponse
    {
        return $this->paginatedUseCaseResponseBuilder
            ->create()
            ->withItems($this->createFromCollection($collection->getItems()))
            ->withItemsPerPage($collection->getItemsPerPage())
            ->withPage($collection->getPage())
            ->withTotalItems($collection->getTotalItems())
            ->build();
    }

    /**
     * {@inheritdoc}
     */
    private function createFromCollection(array $collection = []): array
    {
        $items = [];

        foreach ($collection as $entity) {
            $items[] = $this->create($entity);
        }

        return $items;
    }
}
