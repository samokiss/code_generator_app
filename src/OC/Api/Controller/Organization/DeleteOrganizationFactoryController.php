<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OC\Api\Controller\Organization;

use OC\ApiBundle\Framework\FrameworkBundle\Controller\AbstractApiController;
use OC\BusinessRules\Gateways\Organization\Exceptions\OrganizationFactoryNotFoundException;
use OC\BusinessRules\Requestors\Organization\DeleteOrganizationFactoryRequestBuilder;
use OC\BusinessRules\UseCases\Organization\DeleteOrganizationFactory;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Annotation\Route;

class DeleteOrganizationFactoryController extends AbstractApiController
{
    /**
     * @var DeleteOrganizationFactoryRequestBuilder
     */
    private $deleteOrganizationFactoryRequestBuilder;

    public function __construct(DeleteOrganizationFactoryRequestBuilder $builder)
    {
        $this->deleteOrganizationFactoryRequestBuilder = $builder;
    }

    /**
     * @Route("/organization-factories/{organizationFactoryId}", name="oc_apiorganization_organization_factory_delete", methods={"DELETE"}, requirements={"organizationFactoryId"="^\d{1,9}$"})
     *
     * @Security("")
     */
    public function deleteAction(int $organizationFactoryId): JsonResponse
    {
        try {
            $this->deleteOrganizationFactory($organizationFactoryId);

            return $this->createDeletedResponse();
        } catch (OrganizationFactoryNotFoundException $exception) {
            $this->throwNotFoundException();
        }
    }

    private function deleteOrganizationFactory(int $organizationFactoryId): void
    {
        $this->get(DeleteOrganizationFactory::class)->execute(
            $this->deleteOrganizationFactoryRequestBuilder
                ->create()
                ->withOrganizationFactoryId($organizationFactoryId)
                ->build()
        );
    }
}
