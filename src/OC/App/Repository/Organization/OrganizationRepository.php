<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OC\App\Repository\Organization;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\QueryBuilder;
use OC\AppBundle\Repository\PaginatedCollectionFactory;
use OC\App\Entity\Organization\OrganizationImpl;
use OC\BusinessRules\Entities\Organization\Organization;
use OC\BusinessRules\Gateways\Organization\Exceptions\OrganizationNotFoundException;
use OC\BusinessRules\Gateways\Organization\OrganizationGateway;
use Symfony\Bridge\Doctrine\RegistryInterface;

class OrganizationRepository extends ServiceEntityRepository implements OrganizationGateway
{
    /**
     * @var PaginatedCollectionFactory
     */
    private $paginatedCollectionFactory;

    public function __construct(RegistryInterface $registry, PaginatedCollectionFactory $paginatedCollectionFactory)
    {
        parent::__construct($registry, OrganizationImpl::class);
        $this->paginatedCollectionFactory = $paginatedCollectionFactory;
    }

    public function delete(Organization $organization): void
    {
        $this->getEntityManager()->remove($organization);
    }

    public function findAll(array $filters = [], array $sorts = [], array $pagination = []): iterable
    {
        $queryBuilder = $this->getQueryBuilder();

        return $this->paginatedCollectionFactory->make($queryBuilder, $pagination);
    }

    private function getQueryBuilder(): QueryBuilder
    {
        return $this->createQueryBuilder('o');
    }

    public function findById(int $organizationId): Organization
    {
        $organization = parent::find($organizationId);
        if (null === $organization) {
            throw new OrganizationNotFoundException();
        }

        return $organization;
    }

    public function insert(Organization $organization): void
    {
        $this->getEntityManager()->persist($organization);
    }

    public function update(Organization $organization): void
    {
        $organization->update();
    }
}
